{"version":3,"sources":["./src/app/dashboard.service.ts","./src/app/project.ts","./src/app/admin/about/about.component.ts","./src/app/admin/about/about.component.html","./src/environments/environment.ts","./src/app/client-locations.service.ts","./src/app/admin/projects/projects.component.ts","./src/app/admin/projects/projects.component.html","./src/app/client-location.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/login-view-model.ts","./src/app/app.module.ts","./src/app/can-activate-gard.service.ts","./src/app/team-size-validator.directive.ts","./src/app/login.service.ts","./src/app/jwt-un-authorized-interceptor.service.ts","./src/app/admin/admin.module.ts","./src/app/jwtinterceptor.service.ts","./src/app/admin/my-profile/my-profile.component.ts","./src/app/admin/my-profile/my-profile.component.html","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/dashboard/dashboard.component.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./src/app/projects.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable(\n\n)\nexport class DashboardService {\n\n  constructor() { }\n\n  grtTeamMemberSummary(): any[] {\n    var TeamMembersSummary = [\n      {\n        Region: 'East',\n        TeamMembersCount: 20,\n        TemporarilyUnavailableMembers: 4,\n      },\n      {\n        Region: 'West',\n        TeamMembersCount: 15,\n        TemporarilyUnavailableMembers: 8,\n      },\n      {\n        Region: 'South',\n        TeamMembersCount: 17,\n        TemporarilyUnavailableMembers: 1,\n      },\n      {\n        Region: 'North',\n        TeamMembersCount: 15,\n        TemporarilyUnavailableMembers: 6,\n      },\n      \n    ];\n    return TeamMembersSummary;\n  }\n\n\n}\n\n","import { ClientLocation } from \"./client-location\";\n\nexport class Project {\n\n    projectID: number;\n    projectName: string;\n    dateOfStart: string;\n    teamSize: number;\n    active: boolean;\n    status: string;\n    clientLocationID: number;\n    clientLocation: ClientLocation;\n\n    constructor()\n    {\n        this.projectID = 0;\n        this.projectName = \"\";\n        this.dateOfStart = \"\";\n        this.teamSize = 0;\n        this.active = true;\n        this.status = '';\n        this.clientLocationID = 0;\n        this.clientLocation = new ClientLocation();\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from './client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService {\n\n  constructor(private httpClient : HttpClient) \n  { }\n\n  getClientLocations(): Observable<ClientLocation[]>\n  {\n    return this.httpClient.get<ClientLocation[]>(\"/api/clientlocations\", { responseType: \"json\" });\n  }\n\n  \n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProjectsService } from \"../../projects.service\";\nimport { Project } from '../../project';\nimport { ClientLocation } from '../../client-location';\nimport { ClientLocationsService } from '../../client-locations.service';\nimport { NgForm } from '@angular/forms';\nimport * as $ from \"jquery\";\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit\n{\n  projects: Project[] = [];\n  clientLocations: ClientLocation[] = [];\n  showLoading: boolean = true;\n\n  newProject: Project = new Project();\n  editProject: Project = new Project();\n  editIndex: number = 0;\n  deleteProject: Project = new Project();\n  deleteIndex: number = 0;\n  searchBy: string = \"ProjectName\";\n  searchText: string = \"\";\n\n  @ViewChild(\"newForm\")  newForm!: NgForm;\n  @ViewChild(\"editForm\") editForm!: NgForm;\n\n  constructor(private projectsService: ProjectsService, private clientLocationsService: ClientLocationsService)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.projectsService.getAllProjects().subscribe(\n      (response: Project[]) =>\n      {\n        this.projects = response;\n        this.showLoading = false;\n      }\n    );\n\n    this.clientLocationsService.getClientLocations().subscribe(\n      (response) =>\n      {\n        this.clientLocations = response;\n      }\n    );\n  }\n\n  onNewClick()\n  {\n    this.newForm.resetForm();\n  }\n\n  onSaveClick()\n  {\n    if (this.newForm.valid)\n    {\n      this.newProject.clientLocation.clientLocationID = 0;\n      this.projectsService.insertProject(this.newProject).subscribe((response) =>\n      {\n        //Add Project to Grid\n        var p: Project = new Project();\n        p.projectID = response.projectID;\n        p.projectName = response.projectName;\n        p.dateOfStart = response.dateOfStart;\n        p.teamSize = response.teamSize;\n        p.clientLocation = response.clientLocation;\n        p.active = response.active;\n        p.clientLocationID = response.clientLocationID;\n        p.status = response.status;\n        this.projects.push(p);\n\n        //Clear New Project Dialog - TextBoxes\n        this.newProject.projectID = 0;\n        this.newProject.projectName = '';\n        this.newProject.dateOfStart = '';\n        this.newProject.teamSize = 0;\n        this.newProject.active = false;\n        this.newProject.clientLocationID = 0;\n        this.newProject.status = '';\n\n        $(\"#newFormCancel\").trigger(\"click\");\n      }, (error) =>\n        {\n          console.log(error);\n        });\n    }\n  }\n\n  onEditClick( index: number)\n  {\n    this.editForm.resetForm();\n    setTimeout(() =>\n    {\n      this.editProject.projectID = this.projects[index].projectID;\n      this.editProject.projectName = this.projects[index].projectName;\n      this.editProject.dateOfStart = this.projects[index].dateOfStart.split(\"/\").reverse().join(\"-\"); //yyyy-MM-dd\n      this.editProject.teamSize = this.projects[index].teamSize;\n      this.editProject.active = this.projects[index].active;\n      this.editProject.clientLocationID = this.projects[index].clientLocationID;\n      this.editProject.clientLocation = this.projects[index].clientLocation;\n      this.editProject.status = this.projects[index].status;\n      this.editIndex = index;\n    }, 100);\n  }\n\n  onUpdateClick()\n  {\n    if (this.editForm.valid)\n    {\n      this.projectsService.updateProject(this.editProject).subscribe((response: Project) =>\n      {\n        var p: Project = new Project();\n        p.projectID = response.projectID;\n        p.projectName = response.projectName;\n        p.dateOfStart = response.dateOfStart;\n        p.teamSize = response.teamSize;\n        p.clientLocation = response.clientLocation;\n        p.active = response.active;\n        p.clientLocationID = response.clientLocationID;\n        p.status = response.status;\n        this.projects[this.editIndex] = p;\n\n        this.editProject.projectID = 0;\n        this.editProject.projectName = '';\n        this.editProject.dateOfStart = '';\n        this.editProject.teamSize = 0;\n        this.newProject.active = false;\n        this.newProject.clientLocationID = 0;\n        this.newProject.status = '';\n\n        $(\"#editFormCancel\").trigger(\"click\");\n      },\n        (error) =>\n        {\n          console.log(error);\n        });\n    }\n  }\n\n  onDeleteClick( index: number)\n  {\n    this.deleteIndex = index;\n    this.deleteProject.projectID = this.projects[index].projectID;\n    this.deleteProject.projectName = this.projects[index].projectName;\n    this.deleteProject.dateOfStart = this.projects[index].dateOfStart;\n    this.deleteProject.teamSize = this.projects[index].teamSize;\n  }\n\n  onDeleteConfirmClick()\n  {\n    this.projectsService.deleteProject(this.deleteProject.projectID).subscribe(\n      (response) =>\n      {\n        this.projects.splice(this.deleteIndex, 1);\n        this.deleteProject.projectID = 0;\n        this.deleteProject.projectName = '';\n        this.deleteProject.teamSize = 0;\n        this.deleteProject.dateOfStart = '';\n      },\n      (error) =>\n      {\n        console.log(error);\n      });\n  }\n\n  onSearchClick()\n  {\n    this.projectsService.SearchProjects(this.searchBy, this.searchText).subscribe(\n      (response: Project[]) =>\n      {\n        this.projects = response;\n      },\n      (error) => \n      {\n        console.log(error);\n      });\n  }\n}\n","<h1>\n  Projects\n  <i class=\"fa fa-circle-o-notch fa-spin\" style=\"font-size:34px\" *ngIf=\"showLoading\"></i>\n</h1>\n<div class=\"row\">\n  <div class=\"col-xl-9 mx-auto\">\n    <div class=\"form-group form-row\">\n\n      <div class=\"col-2\">\n        <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#newModal\" (click)=\"onNewClick()\">Create Project</button>\n      </div>\n\n      <label for=\"drpSearchBy\" class=\"col-form-label col-2 text-right\">Search by:</label>\n\n      <div class=\"col-3\">\n        <select class=\"form-control\" id=\"drpSearchBy\" name=\"SearchBy\" [(ngModel)]=\"searchBy\">\n          <option value=\"ProjectID\">Project ID</option>\n          <option value=\"ProjectName\">Project Name</option>\n          <option value=\"DateOfStart\">Date of Start</option>\n          <option value=\"TeamSize\">Team Size</option>\n        </select>\n      </div>\n\n      <label for=\"textSearchText\" class=\"col-form-label col-1 text-right\">Search:</label>\n\n      <div class=\"col-4\">\n        <div class=\"input-group\">\n          <input type=\"text\" class=\"form-control\" id=\"txtSearchText\" name=\"SearchText\" [(ngModel)]=\"searchText\">\n          <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n            <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"col-xl-9 mx-auto\">\n    <table class=\"table\">\n      <thead>\n        <th>Project ID</th>\n        <th>Project Name</th>\n        <th>Date of Start</th>\n        <th>Team Size</th>\n        <th>Client Location</th>\n        <th>Status</th>\n        <th>Actions</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let project of projects; let i = index\" [ngClass]=\"{ 'text-muted': !project.active}\">\n          <td>{{project.projectID}}</td>\n          <td>{{project.projectName}}</td>\n          <td>{{project.dateOfStart}}</td>\n          <td>{{project.teamSize}}</td>\n          <td>{{project.clientLocation.clientLocationName}}</td>\n          <td>{{project.status}}</td>\n          <td>\n            <button class=\"btn btn-info\" (click)=\"onEditClick( i)\" data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>&nbsp;\n            <button class=\"btn btn-warning\" (click)=\"onDeleteClick( i)\" data-toggle=\"modal\" data-target=\"#deleteModal\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<form #newForm=\"ngForm\" novalidate=\"novalidate\">\n  <div class=\"modal\" role=\"dialog\" id=\"newModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectID\" style=\"width:130px\" class=\"form-control\" placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"newProject.projectID\" required=\"required\" pattern=\"^[0-9]*$\" #newProjectID=\"ngModel\" [ngClass]=\"{ 'is-invalid': newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted), 'is-valid': newProjectID.valid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors?.required\">Project ID can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || newForm.submitted) && newProjectID.errors?.pattern\">Project ID should contain numbers only</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtNewProjectName\" class=\"form-control\" placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"newProject.projectName\" required=\"required\" minlength=\"3\" maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #newProjectName=\"ngModel\" [ngClass]=\"{ 'is-invalid': newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted), 'is-valid': newProjectName.valid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors?.required\">Project Name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors?.pattern\">Project Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\" *ngIf=\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || newForm.submitted) && newProjectName.errors?.minlength\">Project name should be at least 3 characters long</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtNewDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtNewDateOfStart\" style=\"width:180px\" class=\"form-control\" placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"newProject.dateOfStart\" required=\"required\" #newDateOfStart=\"ngModel\" [ngClass]=\"{ 'is-invalid': newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted), 'is-valid': newDateOfStart.valid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || newForm.submitted) && newDateOfStart.errors?.required\">Date of Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\" name=\"TeamSize\" [(ngModel)]=\"newProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\" appTeamSizeValidator=\"15\" #newTeamSize=\"ngModel\" [ngClass]=\"{ 'is-invalid': newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted), 'is-valid': newTeamSize.valid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.required\">Team Size should be a number</span>\n\n              <span class=\"text-danger\" *ngIf=\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) && newTeamSize.errors?.divisible\">Team Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkNewActive\" value=\"true\" class=\"form-check-input\" [(ngModel)]=\"newProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkNewActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbNewStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusInForce=\"ngModel\">\n                <label for=\"rbNewStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbNewStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"newProject.status\" required=\"required\" #newStatusSupport=\"ngModel\">\n                <label for=\"rbNewStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\" *ngIf=\"newStatusInForce.invalid && (newStatusInForce.dirty || newStatusInForce.touched || newForm.submitted) && newStatusInForce.errors?.required\">Please select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpNewClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpNewClientLocation\" class=\"form-control\" name=\"ClientLocation\" [(ngModel)]=\"newProject.clientLocationID\" required=\"required\" #newClientLocationID=\"ngModel\" [ngClass]=\"{ 'is-invalid': newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted), 'is-valid': newClientLocationID.valid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\" *ngIf=\"newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) && newClientLocationID.errors?.required\">Please client location</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"newFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Edit Project -->\n<form #editForm=\"ngForm\" novalidate=\"novalidate\">\n  <div class=\"modal\" role=\"dialog\" id=\"editModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Edit Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectID\" style=\"width:130px\" class=\"form-control-plain-text\" placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"editProject.projectID\" disabled=\"disabled\" required=\"required\" pattern=\"^[0-9]*$\" #editProjectID=\"ngModel\" [ngClass]=\"{ 'is-invalid': editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || newForm.submitted), 'is-valid': editProjectID.valid && (editProjectID.dirty || editProjectID.touched || newForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors?.required\">Project ID can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || editForm.submitted) && editProjectID.errors?.pattern\">Project ID should contain numbers only</span>\n\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditProjectName\" class=\"form-control\" placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"editProject.projectName\" required=\"required\" minlength=\"3\" maxlength=\"30\" pattern=\"^[A-Za-z0-9 /-]*$\" #editProjectName=\"ngModel\" [ngClass]=\"{ 'is-invalid': editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted), 'is-valid': editProjectName.valid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors?.required\">Project Name can't be blank</span>\n\n              <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors?.pattern\">Project Name can contain alphabets, digits, dot, hyphen or space only</span>\n\n              <span class=\"text-danger\" *ngIf=\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || editForm.submitted) && editProjectName.errors?.minlength\">Project name should be at least 3 characters long</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditDateOfStart\" class=\"col-sm-4 col-form-label\">Date of Start</label>\n            <div class=\"col-sm-8\">\n              <input type=\"date\" id=\"txtEditDateOfStart\" style=\"width:180px\" class=\"form-control\" placeholder=\"Date of Start\" name=\"DateOfStart\" [(ngModel)]=\"editProject.dateOfStart\" required=\"required\" #editDateOfStart=\"ngModel\" [ngClass]=\"{ 'is-invalid': editDateOfStart.invalid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted), 'is-valid': editDateOfStart.valid && (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"editDateOfStart.invalid && (editForm.submitted) && editDateOfStart.errors?.required\">Date of Start can't be blank</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtEditTeamSize\" class=\"col-sm-4 col-form-label\">Team Size</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtEditTeamSize\" style=\"width:150px\" class=\"form-control\" placeholder=\"Team Size\" name=\"TeamSize\" [(ngModel)]=\"editProject.teamSize\" pattern=\"^[0-9]*$\" maxlength=\"7\" appTeamSizeValidator=\"15\" #editTeamSize=\"ngModel\" [ngClass]=\"{ 'is-invalid': editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted), 'is-valid': editTeamSize.valid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) }\">\n\n              <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors?.required\">Team Size should be a number</span>\n\n              <span class=\"text-danger\" *ngIf=\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) && editTeamSize.errors?.divisible\">Team Size should be divisble by 5</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"col-sm-4 col-form-label\">&nbsp;</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check\">\n                <input type=\"checkbox\" id=\"chkEditActive\" value=\"true\" class=\"form-check-input\" [(ngModel)]=\"editProject.active\" name=\"active\">\n                <label class=\"form-check-label\" for=\"chkEditActive\">Active</label>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"rbEditStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusInForce\" value=\"In Force\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusInForce=\"ngModel\">\n                <label for=\"rbEditStatusInForce\" class=\"form-check-label\">In Force</label>\n              </div>\n\n              <div class=\"form-check form-check-inline\">\n                <input type=\"radio\" id=\"rbEditStatusSupport\" value=\"Support\" class=\"form-check-input\" name=\"Status\" [(ngModel)]=\"editProject.status\" required=\"required\" #editStatusSupport=\"ngModel\">\n                <label for=\"rbEditStatusSupport\" class=\"form-check-label\">Support</label>\n              </div>\n\n              <span class=\"text-danger\" *ngIf=\"editStatusInForce.invalid && (editStatusInForce.dirty || editStatusInForce.touched || editForm.submitted) && editStatusInForce.errors?.required\">Please select status</span>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpEditClientLocation\" class=\"col-sm-4 col-form-label\">Client Location</label>\n            <div class=\"col-sm-8\">\n              <select id=\"drpEditClientLocation\" class=\"form-control\" name=\"ClientLocation\" [(ngModel)]=\"editProject.clientLocationID\" required=\"required\" #editClientLocationID=\"ngModel\" [ngClass]=\"{ 'is-invalid': editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted), 'is-valid': editClientLocationID.valid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) }\">\n                <option value=\"null\">Please Select</option>\n                <option *ngFor=\"let clientLocation of clientLocations\" [value]=\"clientLocation.clientLocationID\">\n                  {{clientLocation.clientLocationName}}\n                </option>\n              </select>\n\n              <span class=\"text-danger\" *ngIf=\"editClientLocationID.invalid && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) && editClientLocationID.errors?.required\">Please client location</span>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\" id=\"editFormCancel\">Cancel</button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">Update</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n<!-- Delete Project -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width:700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Delete Project</div>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"text-warning\">Are you sure to delete this Project?</div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectID\" class=\"col-sm-4 col-form-label\">Project ID</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectID\" style=\"width:100px\" class=\"form-control-plain-text\" placeholder=\"Project ID\" name=\"ProjectID\" [(ngModel)]=\"deleteProject.projectID\" disabled=\"disabled\">\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectName\" class=\"col-sm-4 col-form-label\">Project Name</label>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" id=\"txtDeleteProjectName\" class=\"form-control-plain-text\" placeholder=\"Project Name\" name=\"ProjectName\" [(ngModel)]=\"deleteProject.projectName\" disabled=\"disabled\">\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n          <button class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"onDeleteConfirmClick()\">Delete</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","export class ClientLocation \n{\n    clientLocationID: number;\n    clientLocationName: string;\n\n    constructor()\n    {\n        this.clientLocationID = 0;\n        this.clientLocationName = '';\n    }\n}\n","<nav class=\"navbar navbar-expand-sm bg-success navbar-dark\">\n    <a class=\"navbar-brand\" href=\"#\">\n        Angular Task Manager\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mynav\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"mynav\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != ''\">\n                <a class=\"nav-link\" routerLink=\"dashboard\">Dashboard</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"about\">About</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != '' \">\n                <a class=\"nav-link\" routerLink=\"projects\">Projects</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != '' \">\n                <a class=\"nav-link\" href=\"#\">{{loginService.currentUserName}}</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != '' \">\n                <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == '' \">\n                <a class=\"nav-link\" routerLink=\"login\">Login</a>\n            </li>\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0\">\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"search\"><i class=\"fa fa-search\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n            </div>\n            <button class=\"btn btn-warning my2- my-sm-0\" type=\"button\" (click)=\"onSearchClick()\">Search</button>\n        </form>\n    </div>\n</nav>\n\n<div class=\"container-fluid\">\n    <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\nimport { LoginService } from './login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent\n{\n  constructor(public loginService : LoginService)\n  {\n  }\n\n  onSearchClick()\n  {\n    console.log(this.loginService.currentUserName);\n  }\n}\n","export class LoginViewModel {\n    UserName: string = \"\";\n    Password: string = \"\";\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminModule } from './admin/admin.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { JWTInterceptorService } from './jwtinterceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './jwt-un-authorized-interceptor.service';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { TeamSizeValidatorDirective } from './team-size-validator.directive';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    TeamSizeValidatorDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AdminModule,\n    FormsModule,\n    JwtModule.forRoot( {\n      config: {\n        tokenGetter: () => {\n          return (sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\")??'').token : '' )\n        }\n      }\n    })\n  ],\n  providers: \n  [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JWTInterceptorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtUnAuthorizedInterceptorService,\n      multi: true\n    }\n  \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateGardService {\n\n  constructor(private loginService : LoginService, private router : Router, private jwtHelperService : JwtHelperService)\n  {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot) : boolean\n  {\n    //console.log(this.router.url);\n    var token = sessionStorage.getItem(\"currentUser\")? JSON.parse(sessionStorage.getItem(\"currentUser\")??'').token : '';\n    if (this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role == route.data.expectedRole)\n    {\n      return true; //the user can navigate to the particular route\n    }\n    else\n    {\n      this.router.navigate([ \"login\" ]);\n      return false; //the user can't navigate to the particular route\n    }\n  }\n}","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [{provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true }]\n})\nexport class TeamSizeValidatorDirective \n{\n\n  constructor() \n  {\n  }\n  \n  @Input(\"appTeamSizeValidator\") n!: number;\n  \n  validate(control: AbstractControl) : ValidationErrors | null\n  {\n    let currentValue = control.value;\n    let isValid = currentValue % this.n == 0;\n\n    if (isValid)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { divisible: { valid: false } }; //indicates invalid\n    }\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoginViewModel } from './login-view-model';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService\n{\n  private  httpClient : HttpClient | undefined \n\n  constructor(private httpBackend: HttpBackend, private jwtHelperService : JwtHelperService)\n  {\n  }\n\n  currentUserName: string  = \"\";\n\n  public Login(loginViewModel: LoginViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\", loginViewModel, { responseType: \"json\" })\n    .pipe(map(user => {\n      if (user)\n      {\n        this.currentUserName = user.userName;\n        sessionStorage.currentUser = JSON.stringify(user);\n      }\n      return user;\n    }));\n  }\n\n  public Logout()\n  {\n    sessionStorage.removeItem(\"currentUser\");\n    this.currentUserName = \"\";\n  }\n\n  public isAuthenticated() : boolean\n  {\n    var token = sessionStorage.getItem(\"currentUser\")? JSON.parse(sessionStorage.getItem(\"currentUser\")??'').token : '';\n    if (this.jwtHelperService.isTokenExpired())\n    {\n      return false; //token is not valid\n    }\n    else\n    {\n      return true; //token is valid\n    }\n  }\n}","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedInterceptorService {\n\n  constructor() \n  { }\n\n\n intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n  {\n    return next.handle(request).pipe(tap(\n\n      (event: HttpEvent<any>) =>\n      {\n        if (event instanceof HttpResponse)\n        {\n          \n        }\n      },\n\n      (error: any) =>\n      {\n        if (error instanceof HttpErrorResponse)\n        {\n          if (error.status == 401)\n          {\n            console.log(error);\n            alert(\"401 UnAuthorized\");\n          }\n        }\n      }\n\n    ));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AboutComponent } from './about/about.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { DashboardService } from '../dashboard.service';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { FormsModule } from \"@angular/forms\";\n\n\n@NgModule({\n  declarations:\n   [\n     DashboardComponent,\n     AboutComponent,\n     MyProfileComponent,\n     ProjectsComponent\n   ],\n  imports: [\n    CommonModule, FormsModule\n  ],\n  exports:\n  [\n    DashboardComponent, AboutComponent, \n    MyProfileComponent, ProjectsComponent\n  ],\n  providers:[DashboardService]\n})\nexport class AdminModule { }\n","import { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JWTInterceptorService {\n\n  constructor() \n  { }\n\n  intercept(request : HttpRequest<any>, next : HttpHandler) : Observable<HttpEvent<any>>\n  {\n    var currentUser = { token: \"\" };\n    if (sessionStorage.currentUser != '')\n    {\n      currentUser = JSON.parse(sessionStorage.currentUser);\n    }\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: \"Bearer \" + currentUser.token\n      }}\n    );\n\n    return next.handle(request);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>my-profile works!</p>\n","<nav>\n  <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/\">Home</a></li>\n    <li class=\"breadcrumb-item active\">Dashboard</li>\n  </ol>\n</nav>\n\n<h5>Dashboard</h5>\n<h6>{{ ToDay | date: \"d/M/y\" }}</h6>\n<div class=\"row\">\n  <div class=\"col-lg-3 pb-3\" style=\"background-color: #e9e6e6\">\n    <div class=\"row\">\n      <div\n        class=\"col-11 text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\n        style=\"\n          background-color: #a39e9e;\n          font-family: 'Arial Narrow Bold', sans-serif;\n        \"\n      >\n        {{ Designation | uppercase }}\n      </div>\n      <div class=\"col-12 text-center mt-2\">\n        <img src=\"assets/user.png\" width=\"120px\" />\n      </div>\n      <div\n        class=\"col-12 text-center pt-2 pb-2 font-weight-bold\"\n        style=\"font-family: Tahoma\"\n      >\n        {{ Username | lowercase }}\n      </div>\n      <div class=\"col-12 text-center pt-2 pb-2\" style=\"font-family: Arial\">\n        TEAM SUMMARY\n      </div>\n      <div class=\"col-12 mb-3\">\n        <ul class=\"list-group\">\n          <li\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            NO. OF TEAM MEMBERS\n            <span\n              class=\"badge badge-secondary badge-pill\"\n              style=\"font-size: 13px\"\n              >{{ NoOfTeamMembers }}</span\n            >\n          </li>\n          <li\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            TOTAL COST OF ALL PROJECTS\n            <span\n              class=\"badge badge-secondary badge-pill\"\n              style=\"font-size: 13px\"\n              >$ {{ TotalCostOfAllProjects }} k</span\n            >\n          </li>\n          <li\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            PENDING TASKS\n            <span\n              class=\"badge badge-secondary badge-pill\"\n              style=\"font-size: 13px\"\n              >{{ PendingTasks }}</span\n            >\n          </li>\n          <li\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            UPCOMING PROJECTS\n            <span\n              class=\"badge badge-secondary badge-pill\"\n              style=\"font-size: 13px\"\n              >{{ UpComingProjects | percent }}</span\n            >\n          </li>\n        </ul>\n      </div>\n      <div\n        class=\"col-12 text-center pt-2 pb-2\"\n        style=\"font-family: 'Arial Narrow'\"\n      >\n        CLIENTS\n      </div>\n      <div class=\"col-12\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\" *ngFor=\"let client of Clients\">\n            {{ client | slice: 0:20 }}\n          </li>\n        </ul>\n        <!--{{TeamMembersSummary}}-->\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-6\">\n    <div class=\"row\">\n      <div class=\"col-12 pt-0 pb-2\" style=\"background-color: #e9e6e6\">\n        <div class=\"row mt-2\">\n          <div class=\"col-6 text-left\">\n            <div class=\"dropdown\">\n              <button\n                class=\"btn btn-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n              >\n                Project A\n              </button>\n              <div class=\"dropdown-menu\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  *ngFor=\"let project of Projects\"\n                  onclick=\"return false\"\n                  (click)=\"onProjectChange($event)\"\n                  >{{ project }}</a\n                >\n              </div>\n            </div>\n          </div>\n          <div class=\"col-6 text-right\">\n            <div class=\"dropdown\">\n              <button\n                class=\"btn btn-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n              >\n                2019\n              </button>\n              <div class=\"dropdown-menu\">\n                <a class=\"dropdown-item\" href=\"#\" *ngFor=\"let year of Years\">\n                  <span [ngSwitch]=\"year\">\n                    <span *ngSwitchCase=\"'2019'\" style=\"color: green\">{{\n                      year\n                    }}</span>\n                    <span *ngSwitchCase=\"'2018'\" style=\"color: blue\">{{\n                      year\n                    }}</span>\n                    <span *ngSwitchCase=\"'2017'\" style=\"color: red\">{{\n                      year\n                    }}</span>\n                    <span *ngSwitchDefault style=\"color: black\">{{\n                      year\n                    }}</span>\n                  </span>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\"\n        style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n      >\n        PROJECT BRIEFING\n      </div>\n      <div class=\"col-12\">\n        <table class=\"table table-borderless\">\n          <tr>\n            <td>Project Cost</td>\n            <td>{{ ProjectCost | currency: \"EGP\" }}</td>\n          </tr>\n          <tr>\n            <td>Current Expenditure</td>\n            <td>{{ CurrentExpenditure | currency: \"EGP\" }}</td>\n          </tr>\n          <tr>\n            <td>Available Funds</td>\n            <td>{{ AvailableFunds | currency: \"EGP\" }}</td>\n          </tr>\n        </table>\n      </div>\n      <div\n        class=\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\"\n        style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n      >\n        TEAM MEMBERS SUMMARY\n      </div>\n      <div class=\"col-12\">\n        <table class=\"table\">\n          <tr>\n            <th>Region</th>\n            <th>Team Members Count</th>\n            <th>Temporarily Unavailable Members</th>\n          </tr>\n          <tr *ngFor=\"let teamMemberSumary of TeamMembersSummary\">\n            <td>\n              <b>{{ teamMemberSumary.Region }}</b>\n            </td>\n            <td>\n              {{ teamMemberSumary.TeamMembersCount }}\n            </td>\n            <td>\n              {{ teamMemberSumary.TemporarilyUnavailableMembers }}\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-3\" style=\"background-color: #e9e6e6\">\n    <div class=\"row\">\n      <div\n        class=\"col-11 mx-auto mt-1 text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\"\n        style=\"background-color: #718d97; font-family: 'Arial Narrow'\"\n      >\n        TEAM MEMBERS\n      </div>\n      <div class=\"col-lg-12 pt-2\">\n        <div class=\"accordion\" id=\"accordion1\">\n          <div\n            class=\"card\"\n            *ngFor=\"let teamMembersGroup of TeamMembers; let i = index\"\n          >\n            <div class=\"card-header bg-secondary\" id=\"card1\">\n              <h2 class=\"mb-0\">\n                <button\n                  class=\"btn btn-link text-white\"\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  [attr.data-target]=\"'#cardbody' + i\"\n                >\n                  {{ teamMembersGroup.Region }}\n                </button>\n              </h2>\n            </div>\n            <div\n              [id]=\"'cardbody' + i\"\n              class=\"collapse\"\n              data-parent=\"#accordion1\"\n              [ngClass]=\"i == 0 ? 'show' : ''\"\n            >\n              <div class=\"card-body\">\n                <div\n                  *ngIf=\"i == 0; then firstTemplate; else secondTemplate\"\n                ></div>\n\n                <ng-template #firstTemplate>\n                  <div\n                    class=\"card\"\n                    *ngFor=\"let member of teamMembersGroup.Members\"\n                  >\n                    <div class=\"card-header bg-primary text-white\">\n                      #{{ member.ID }} {{ member.Name }}\n                    </div>\n                    <div class=\"card-body\">{{ member.Status }}</div>\n                  </div>\n                </ng-template>\n\n                <ng-template #secondTemplate>\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let member of teamMembersGroup.Members\">\n                        <td>{{ member.ID }}</td>\n                        <td\n                          [style.color]=\"\n                            member.Status == 'Busy' ? 'red' : 'black'\n                          \"\n                        >\n                          {{ member.Name }}\n                        </td>\n                        <td>{{ member.Status }}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </ng-template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../../dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  Designation: string = \"\";\n  Username: string = \"\";\n  NoOfTeamMembers: number = 0;\n  TotalCostOfAllProjects: number = 0;\n  PendingTasks: number = 0;\n  UpComingProjects: number = 0;\n  ProjectCost: number = 0;\n  CurrentExpenditure: number = 0;\n  AvailableFunds: number = 0;\n  ToDay: Date | undefined ;\n\n  Clients: string[] = [];\n  Projects: string[] = [];\n  Years: number[] = [];\n  TeamMembersSummary: any = [];\n  TeamMembers: any = [];\n  \n  constructor(private dashboardService: DashboardService) {}\n\n  ngOnInit(): void {\n    this.Designation = 'Team Leader';\n    this.Username = 'Ahmed Rabie ';\n    this.NoOfTeamMembers = 67;\n    this.TotalCostOfAllProjects = 240;\n    this.PendingTasks = 15;\n    this.UpComingProjects = 2;\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52536;\n    this.ToDay = new Date();\n\n    this.Clients= [\n      'ABC Infotech Ltd.',\n      'DEF Software Solutions',\n      'GHI Industries',\n    ]\n    this.Projects = ['Project A', 'Project B', 'Project C', 'Project D'];\n\n    for (var i = 2019; i >= 2010; i--) {\n      this.Years.push(i);\n    }\n\n    this.TeamMembersSummary = this.dashboardService.grtTeamMemberSummary();\n    \n    this.TeamMembers = [\n      {\n        Region: 'East',\n        Members: [\n          { ID: 1, Name: 'Mohamed', Status: 'Available' },\n          { ID: 2, Name: 'Ali', Status: 'Available' },\n          { ID: 3, Name: 'Norham', Status: 'Busy' },\n          { ID: 4, Name: 'Esraa', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'West',\n        Members: [\n          { ID: 5, Name: 'Omar', Status: 'Available' },\n          { ID: 6, Name: 'Ahmed', Status: 'Available' },\n          { ID: 7, Name: 'Gamber', Status: 'Busy' },\n          { ID: 8, Name: 'Marawan', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'South',\n        Members: [\n          { ID: 9, Name: 'Hady', Status: 'Available' },\n          { ID: 10, Name: 'Abdallah', Status: 'Available' },\n          { ID: 11, Name: 'Mahmoud', Status: 'Busy' },\n          { ID: 12, Name: 'Hala', Status: 'Busy' },\n        ],\n      },\n      {\n        Region: 'North',\n        Members: [\n          { ID: 13, Name: 'Moustafa', Status: 'Available' },\n          { ID: 14, Name: 'Aya', Status: 'Available' },\n          { ID: 15, Name: 'Hesham', Status: 'Busy' },\n          { ID: 16, Name: 'Gamal', Status: 'Busy' },\n        ],\n      },\n    ];\n  }\n\nonProjectChange($event: any) {\n    if ($event.target.innerHTML == 'Project A') {\n      this.ProjectCost = 2113507;\n      this.CurrentExpenditure = 96788;\n      this.AvailableFunds = 52436;\n    } else if ($event.target.innerHTML == 'Project B') {\n      this.ProjectCost = 88923;\n      this.CurrentExpenditure = 22450;\n      this.AvailableFunds = 2640;\n    } else if ($event.target.innerHTML == 'Project C') {\n      this.ProjectCost = 662183;\n      this.CurrentExpenditure = 7721;\n      this.AvailableFunds = 9811;\n    } else if ($event.target.innerHTML == 'Project D') {\n      this.ProjectCost = 928431;\n      this.CurrentExpenditure = 562;\n      this.AvailableFunds = 883;\n    }\n  }\n}\n \n\n\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DashboardComponent } from \"./admin/dashboard/dashboard.component\";\nimport { AboutComponent } from \"./admin/about/about.component\";\nimport { ProjectsComponent } from \"./admin/projects/projects.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { CanActivateGardService } from './can-activate-gard.service';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"dashboard\", component: DashboardComponent, canActivate: [ CanActivateGardService ], data: { expectedRole: \"Admin\" } },\n  { path: \"about\", component: AboutComponent },\n  { path: \"projects\", component: ProjectsComponent, canActivate: [ CanActivateGardService ], data: { expectedRole: \"Admin\" } },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule\n{\n}","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../login-view-model';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string = \"\";\n\n  constructor(private loginService: LoginService, private router : Router)\n   {\n\n   }\n\n  ngOnInit(): void\n   {\n   }\n\n  onLoginClick()\n  {\n    this.loginService.Login(this.loginViewModel).subscribe(\n      (response) => {\n        this.router.navigateByUrl(\"/dashboard\");\n      },\n      (error) => {\n        console.log(error);\n        this.loginError = \"Invalid Username or Password\";\n      },\n    );\n  }\n\n}\n","<form>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\n        <div class=\"card mt-4\">\n          <div class=\"card-header bg-secondary text-white\">\n            <h3>Login</h3>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"form-group form-row\">\n              <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n              <div class=\"col-md-8\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" [(ngModel)]=\"loginViewModel.UserName\" name=\"UserName\" autofocus=\"autofocus\">\n              </div>\n            </div>\n  \n            <div class=\"form-group form-row\">\n              <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n              <div class=\"col-md-8\">\n                <input type=\"password\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"loginViewModel.Password\" name=\"Password\">\n              </div>\n            </div>\n  \n          </div>\n  \n          <div class=\"card-footer text-right\">\n            <span class=\"text-danger\">{{loginError}}&nbsp;</span>\n            <button class=\"btn btn-primary\" (click)=\"onLoginClick()\">Login</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Project } from './project';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  constructor(private httpClient : HttpClient) \n  { \n\n  }\n\n  getAllProjects() : Observable<Project[]>\n  {\n   \n    return this.httpClient.get<Project[]>(\"/api/projects\", { responseType: \"json\" })\n    .pipe(map(\n      (data: Project[]) => {\n        for (let i = 0; i < data.length; i++)\n        {\n          //data[i].teamSize = data[i].teamSize * 100;\n        }\n        return data;\n      }\n    ));\n  }\n\n  insertProject(newProject: Project) : Observable<Project>\n  {\n    return this.httpClient.post<Project>(\"/api/projects\", newProject, { responseType: \"json\" });\n  }\n\n  updateProject(existingProject: Project) : Observable<Project>\n  {\n    return this.httpClient.put<Project>(\"/api/projects\", existingProject, { responseType: \"json\" });\n  }\n\n  deleteProject(ProjectID: number) : Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/projects?ProjectID=\" + ProjectID);\n  }\n\n  SearchProjects(searchBy: string, searchText: string) : Observable<Project[]>\n  {\n    return this.httpClient.get<Project[]>(\"/api/projects/search/\" + searchBy + \"/\" + searchText, { responseType: \"json\" });\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}